/**
 * Crear una tabla de clientes en una base de datos (cualquiera que sea relacional) 
 * con las siguientes columnas:
 * - NIf char(9) primary key,
 * - Nombre varchar(100),
 * - direccion varchar(150),
 * - telefono char(9)
 * Introducir datos de prueba y después hacer un programa en Java que nos visualice 
 * una rejilla  con el NIF y el Nombre (solo estas dos columnas).
 * Cuando hagamos doble clic encima de una fila nos debe aparecer una ventana con 
 * todos los datos de ese cliente, es decir: nif, nombre, dirección y teléfono.
 * Subir el proyecto completo en .zip
 */
package conexionFirebird;

import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 * @author Carlos León Remedios
 * 2º DAM - Acceso a Datos
 * Ejercicio 12/03/2018
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private Datos conexion = new Datos();
    private ResultSet rs;
    
    public VentanaPrincipal() {
        initComponents();
        this.setTitle("Clientes:");
        conexion.conectar();
        crearTabla();
    }
    
    public void crearTabla(){        
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.setColumnIdentifiers(new String[] {"NIF", "Nombre"});
        rs = conexion.consultarClientes();
        try {
            while (rs.next()){
                dtm.addRow(new String[] {rs.getString("NIF"), rs.getString("NOMBRE")});
            }
        } catch (SQLException sqle){
            System.out.println("Error consulta creación de tabla:\n"+sqle.getMessage());
        }
        tablaClientes.setModel(dtm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaClientes.setToolTipText("");
        tablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaClientesMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaClientes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaClientesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClientesMousePressed
        if(evt.getClickCount()==2){
            VentanaCliente vc = new VentanaCliente(this, true);
            String nif = (String)tablaClientes.getValueAt(tablaClientes.getSelectedRow(), 0);
            rs = conexion.consultarCliente(nif);
            try {
                while (rs.next()){
                    vc.recibeCliente(rs.getString("nif"), rs.getString("Nombre"), 
                            rs.getString("Direccion"), rs.getString("Telefono"));
                }
            } catch (SQLException sqlex){
                System.out.println("Error consulta de cliente:\n"+sqlex.getMessage());
            }
            vc.setVisible(true);
       }
    }//GEN-LAST:event_tablaClientesMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaClientes;
    // End of variables declaration//GEN-END:variables
}
